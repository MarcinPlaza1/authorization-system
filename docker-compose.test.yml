version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_test_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2-alpine
    command: redis-server --save "" --appendonly no --protected-mode no
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  redis-exporter:
    image: oliver006/redis_exporter:latest
    environment:
      - REDIS_ADDR=redis://redis:6379
    ports:
      - "9121:9121"
    depends_on:
      - redis

  tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql+asyncpg://test:test@db:5432/test_db
      - MAIL_USERNAME=test@example.com
      - MAIL_PASSWORD=test_password
      - MAIL_FROM=test@example.com
      - MAIL_PORT=587
      - MAIL_SERVER=smtp.example.com
      - MAIL_FROM_NAME=Test
      - MAIL_TLS=True
      - MAIL_SSL=False
      - USE_CREDENTIALS=True
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres_test_data:
  redis_data: 